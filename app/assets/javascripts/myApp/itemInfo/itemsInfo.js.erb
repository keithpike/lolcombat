/**
* itemSelector Module
*
* Description
*/
angular.module('itemInfo', [
	'models.items',
	'mgcrea.ngStrap.popover',
	'ngSanitize',
	'ngOrderObjectBy'
])

	.config(['$stateProvider', function($stateProvider){
		$stateProvider
			.state('appStart.items', {
				url: '/items',
				views: {
				 	'': {
				 		templateUrl: "<%= asset_path('myApp/itemInfo/itemInfo.html') %>",
				 		controller: 'ItemsController as itemsController'
				 	},
				 	'navbar': {
				 		templateUrl: "<%= asset_path('myApp/navbar/navbar.html') %>",
				 	},
					'footer': {
						templateUrl: "<%= asset_path('myApp/footer/footer.html') %>",
					}
				},
				resolve: {
					itemsData: ['ItemsModel', function(ItemsModel) {
						return ItemsModel.getItems()
							.then(function(result) {
								return result;
							});
					}],
					currentItem: ['$stateParams', 'ItemsModel', function($stateParams, ItemsModel) {
						return ItemsModel.resetCurrentItem();
					}]
				}

			})

			.state('appStart.items.selected', {
				//TODO: provide slugs for search term
				url: '/:key',
				views: {
					'@appStart': {
						templateUrl: "<%= asset_path('myApp/itemInfo/itemInfo.selected.html') %>",
						controller: 'DetailedItemsController as itemsController'
					},
				 	'navbar': {
				 		templateUrl: "<%= asset_path('myApp/navbar/navbar.html') %>",
				 	},
					'footer': {
						templateUrl: "<%= asset_path('myApp/footer/footer.html') %>",
					}
				},
				resolve: {

					itemData: ['$stateParams', 'ItemsModel', function($stateParams, ItemsModel){
						return ItemsModel.getItem($stateParams.key)
							.then(function(result){
								return result;
							});
					}],

					currentItem: ['$stateParams', 'ItemsModel', 'itemData', function($stateParams, ItemsModel, itemData){
						return ItemsModel.setCurrentItem($stateParams.key);
					}]


				}

			});


	}])
	// TODO: reference template so tooltips can read out template instead of inline
	// .run(function($templateCache) {
	//   $templateCache.put('itemTooltip.html',
	//   	'<div class="itemTooltipContainer"><span class="itemTooltipName">{{ itemsController.getName($index) }}</span></br><span class="itemTooltipDescription">{{ itemsController.getDescription($index) }}</span></div>'
	//   	);
	// })

	.controller('ItemsController', ['ItemsModel', '$stateParams', 'itemsData', function(ItemsModel, $stateParams, itemsData){
		var itemsController = this;
		itemsController.itemsData = itemsData;

		itemsController.getCurrentItem = ItemsModel.getCurrentItem;
		itemsController.getCurrentItemImage = ItemsModel.getCurrentItemImage;
		itemsController.getImage = ItemsModel.getItemImage;
		itemsController.getId = ItemsModel.getItemId;
		itemsController.getName = ItemsModel.getItemName;
		itemsController.getDescription = ItemsModel.getItemDescription;
		itemsController.getGoldCost = ItemsModel.getItemGoldCost;
	}])

	.controller('DetailedItemsController', ['ItemsModel', '$stateParams', 'itemData', function(ItemsModel, $stateParams, itemData){
		var itemsController = this;
		itemsController.itemData = itemData;


		itemsController.getCurrentItem = ItemsModel.getCurrentItem;
		itemsController.getCurrentItemImage = ItemsModel.getCurrentItemImage;
		itemsController.getImage = ItemsModel.getItemImage;
		itemsController.getId = ItemsModel.getItemId;
		itemsController.getName = ItemsModel.getItemName;
		itemsController.getDescription = ItemsModel.getItemDescription;
		itemsController.getGoldCost = ItemsModel.getItemGoldCost;
	
	}]);

